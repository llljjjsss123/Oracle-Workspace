-- 1번.
SELECT 
    DEPARTMENT_NAME AS "학과 명", 
    CATEGORY AS "계열"
FROM TB_DEPARTMENT;

-- 2번.
SELECT 
    DEPARTMENT_NAME || '과의 정원은 ' || CAPACITY || '명 입니다.' AS "학과별 정원"
FROM TB_DEPARTMENT;--왜 OR표시를 했는가?

-- 3번.
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '001' AND ABSENCE_YN = 'Y' AND STUDENT_SSN LIKE '_______2%';

-- 4번.
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079', 'A513090', 'A513091' , 'A513110', 'A513119')
ORDER BY STUDENT_NAME DESC;--WHERE과 ORDER 출력차이

-- 5번.
SELECT 
    DEPARTMENT_NAME, 
    CATEGORY
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30;

-- 6번.
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;--WHERE DEPARTMENT_NO NOT IN (SELECT DEPARTMENT_NO
                               FROM TB_DEPARTMENT);------------>(홍석님꺼) 뭔소리인가


-- 7번.
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

-- 8번.
SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

-- 9번.
SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT
ORDER BY CATEGORY;--중복된 CATEGORY(과)가 있어서 DISTINCY써준거?

-- 10번.
SELECT 
    STUDENT_NO, 
    STUDENT_NAME, 
    STUDENT_SSN
FROM TB_STUDENT
WHERE ENTRANCE_DATE LIKE '02%' AND STUDENT_ADDRESS LIKE '%전주%' AND ABSENCE_YN LIKE 'N';
SELECT DEPARTMENT_NAME='002',STUDENT_NO AS 학번, STUDENT_NAME

SELECT LPAD(SUBSTR(PROFESSOR_NAME,2),4,'*') AS "이름"
FROM TB_PROFESSOR;

SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE) - (SUBSTR(STUDENT_SSN,1,2)+1900) > 19;

SELECT TO_CHAR(TO_DATE('20/12/25'),'DAY')
FROM DUAL;

SELECT STUDENT_NO,STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO NOT LIKE 'A%';

SELECT ROUND(AVG(POINT),1) AS "평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

SELECT   *
FROM JOB;

SELECT JOB_NAME
FROM JOB;

SELECT *
FROM DEPARTMENT;

SELECT EMP_NAME, EMAIL, PHONE, HIRE_DATE
FROM EMPLOYEE;

SELECT HIRE_DATE, EMP_NAME, SALARY
FROM EMPLOYEE;

SELECT EMP_NAME, SALARY*12 AS 연봉, (SALARY+(SALARY*BONUS))*12 AS 총수령액,
(SALARY+(SALARY*BONUS))*12-(SALARY*12*0.3)AS 실수령액
FROM EMPLOYEE;

SELECT EMP_NAME, SALARY, HIRE_DATE, PHONE
FROM EMPLOYEE
WHERE SAL_LEVEL='S1';

--8
SELECT EMP_NAME, SALARY,(SALARY+(SALARY*BONUS))*12-(SALARY*12*0.3), HIRE_DATE
FROM EMPLOYEE
WHERE (SALARY+(SALARY*BONUS))*12-(SALARY*12*0.3)>50000000;

--9
SELECT *
FROM EMPLOYEE
WHERE SALARY>=4000000 AND JOB_CODE='J2';

--10
SELECT EMP_NAME, DEPT_CODE, HIRE_DATE
FROM EMPLOYEE
WHERE DEPT='D9' OR DEPT='D5' AND HIRE_DATE < '020101';

--11
SELECT *
FROM EMPLOYEE
WHERE HIRE_DATE >='900101' AND HIREDATE=<'010101';

--12
SELECT EMP_NAME
FROM EMPLOYEE
WHERE EMP_NAME LIKE '%연';

--13
SELECT EMP_NAME, PHONE
FROM EMPLOYEE
WHERE PHONE NOT LIKE '010%';

--14
SELECT *
FROM EMPLOYEE
WHERE EMAIL LIKE '____' AND DEPT_CODE='D9' OR DEPT_CODE='D6' AND HIRE DATE AND SALARY>=2700000;

--15
SELECT 
EXTRACT(YEAR FROM EMP_NO),
EXTRACT(MONTH FROM EMP_NO),
EXTRACT(DAY FROM EMP_NO)
FROM EMPLOYEE;

--16
SELECT EMP_NAME,RPAD(SUBSTR(EMP_NO,1,8),14,'*')AS주민번호
FROM EMPLOYEE;

--17
SELECT EMP_NAME, ROUND(ABS(HIRE_DATE-SYSDATE)) AS 근무일수1 ,ROUND(ABS(SYSDATE-HIRE_DATE)) AS 근무일수2
FROM EMPLOYEE;

--18
SELECT *
FROM EMPLOYEE
WHERE MOD(EMP_ID,2)=1;

--19
SELECT EMP_NAME,HIRE_DATE
FROM EMPLOYEE
WHERE EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM HIRE_DATE) >= 20;

--20
SELECT EMP_NAME, SALARY

--21
SELECT EMP_NAME AS "직원명" 
       , DEPT_CODE AS "부서코드"
       ,SUBSTR(EMP_NO,1,2) || '년' || SUBSTR(EMP_NO,3,2) || '월' || SUBSTR(EMP_NO,5,2) || '일',
    -- ,EXTRACT(YEAR FROM SYSDATE)-EXTRACT(YEAR FROM TO_DATE(SUBSTR(EMP_NO,1,2),'RRRR'))
        TRUNC(MOMONTHS_BETWEEN(TRUNC(SYSDATE),TO_DATE(SUBSTR(EMP_NO,1,6),'RRMMDD'))/12)
        
FROM EMPLOYEE;

--22
SELECT DEPT_CODE, 












--25
SELECT
    COUNT(*),
    COUNT(DECODE(EXTRACT(YEAR FROM HIRE_DATE),2001,100,NULL    )AS"2001년"
    COUNT(DECODE(EXTRACT(YEAR FROM HIRE_DATE),2001,100,NULL    )AS"2002년"
    COUNT(DECODE(EXTRACT(YEAR FROM HIRE_DATE),2001,100,NULL    )AS"20033년"
    

    COUNT(DECODE(EXTRACT(YEAR FROM HIRE_DATE),2001,100,NULL    )AS"2001년"
    COUNT(DECODE(EXTRACT(YEAR FROM HIRE_DATE),2001,100,NULL    )AS"2001년"
FROM EMPLOYEE;